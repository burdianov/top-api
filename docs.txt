# add the following rules in .eslintrc.js
	'@typescript-eslint/no-empty-function': 1,
	'prettier/prettier': [
		'error',
		{
			endOfLine: 'auto'
		}
	]

# change trailingComma to 'none' in .prettierrc

# inside tsconfig.json, in "compilerOptions" add:
	"strict": true,
	"strictPropertyInitialization": false,
  "skipLibCheck": true,
	"noImplicitAny": false

$ nest new

$ npm run start:dev


$ nest g module auth

# generate model
$ nest g class product/product.model --no-spec

$ nest g controller auth

$ nest g service auth

$ docker-compose up -d

$ docker-compose up --build --force-recreate --renew-anon-volumes

# inside docker-compose convert indentation to spaces:
	F1 -> Convert Indentation to Spaces -> Enter

$ docker ps --filter "name=mongo"
$ docker stop mongo
$ docker start mongo
$ docker volume ls
$ docker volume inspect volume_name
$ docker volume rm volume_name

$ docker-compose down --volumes
$ docker container ls -aq

$ docker-compose rm -fv mongo

$ docker exec -it mongo bash
$ mongo -u admin -p

$ docker volume prune
$ docker volume rm volume_name

$ git rm --cached mongo-data -r

# undo 'git add' before commit
$ git reset

# for e2e tests
$ npm run test:e2e

# for unit tests
$ npm run test

chrome://inspect/#devices

# package for sending multiple test api requests
$ npm i -g autocannon

$ autocannon http://localhost:3000/api/review/byProduct/60bca2c1fbc82e8c7086c9ec

$ npm i -g clinic
$ clinic doctor --on-port 'autocannon localhost:$PORT/api/review/byProduct/60bca2c1fbc82e8c7086c9ec' -- node dist/main.js



$ nest generate controller
or
$ nest g co
$ nest g co --no-spec

# use --dry-run to view only the result
$ nest g co controller_name --dry-run

$ nest generate service
or
$ nest g s

$ nest g module module_name

$ nest g class coffees/dto/create-coffee.dto --no-spec

$ docker-compose up -d